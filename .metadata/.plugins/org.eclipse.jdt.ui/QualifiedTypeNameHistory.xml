<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<qualifiedTypeNameHistroy>
<fullyQualifiedTypeName name="org.springframework.beans.factory.annotation.Autowired"/>
<fullyQualifiedTypeName name="org.springframework.data.repository.RepositoryDefinition"/>
<fullyQualifiedTypeName name="org.springframework.stereotype.Repository"/>
<fullyQualifiedTypeName name="org.springframework.web.bind.annotation.GetMapping"/>
<fullyQualifiedTypeName name="org.springframework.web.bind.annotation.PostMapping"/>
<fullyQualifiedTypeName name="org.springframework.web.bind.annotation.ControllerAdvice"/>
<fullyQualifiedTypeName name="org.springframework.web.context.request.WebRequest"/>
<fullyQualifiedTypeName name="org.springframework.web.bind.annotation.ExceptionHandler"/>
<fullyQualifiedTypeName name="org.springframework.http.ResponseEntity"/>
<fullyQualifiedTypeName name="java.util.Date"/>
<fullyQualifiedTypeName name="org.springframework.web.bind.annotation.ResponseStatus"/>
<fullyQualifiedTypeName name="org.springframework.http.HttpStatus"/>
<fullyQualifiedTypeName name="javax.persistence.ManyToOne"/>
<fullyQualifiedTypeName name="javax.persistence.OneToMany"/>
<fullyQualifiedTypeName name="javax.persistence.CascadeType"/>
<fullyQualifiedTypeName name="javax.persistence.metamodel.StaticMetamodel"/>
<fullyQualifiedTypeName name="lombok.Setter"/>
<fullyQualifiedTypeName name="lombok.NoArgsConstructor"/>
<fullyQualifiedTypeName name="java.lang.Iterable"/>
<fullyQualifiedTypeName name="java.util.List"/>
<fullyQualifiedTypeName name="com.example.demo.dto.CompaniaDTO"/>
<fullyQualifiedTypeName name="java.util.ArrayList"/>
<fullyQualifiedTypeName name="com.example.demo.repository.CompaniaRepository"/>
<fullyQualifiedTypeName name="java.util.stream.StreamSupport"/>
<fullyQualifiedTypeName name="java.util.stream.Collectors"/>
<fullyQualifiedTypeName name="com.example.demo.entidad.Compania"/>
<fullyQualifiedTypeName name="org.springframework.data.jpa.repository.support.SimpleJpaRepository"/>
<fullyQualifiedTypeName name="org.springframework.data.jpa.repository.JpaRepository"/>
<fullyQualifiedTypeName name="java.io.Serializable"/>
<fullyQualifiedTypeName name="javax.persistence.EntityManager"/>
<fullyQualifiedTypeName name="org.springframework.data.jpa.repository.support.JpaEntityInformation"/>
<fullyQualifiedTypeName name="com.fasterxml.jackson.annotation.JsonProperty"/>
<fullyQualifiedTypeName name="org.springframework.data.jpa.repository.config.EnableJpaRepositories"/>
<fullyQualifiedTypeName name="com.example.demo.util.CustomRepositoryImpl"/>
<fullyQualifiedTypeName name="org.springframework.data.repository.NoRepositoryBean"/>
<fullyQualifiedTypeName name="javax.persistence.GenerationType"/>
<fullyQualifiedTypeName name="com.example.demo.util.CustomRepository"/>
<fullyQualifiedTypeName name="com.sun.istack.NotNull"/>
<fullyQualifiedTypeName name="javax.validation.constraints.NotBlank"/>
<fullyQualifiedTypeName name="javax.validation.constraints.Size"/>
<fullyQualifiedTypeName name="javax.validation.Valid"/>
<fullyQualifiedTypeName name="com.example.demo.dto.PersonaReducidaDTO"/>
<fullyQualifiedTypeName name="org.modelmapper.ModelMapper"/>
<fullyQualifiedTypeName name="com.example.demo.dto.PersonaDTO"/>
<fullyQualifiedTypeName name="java.lang.Exception"/>
<fullyQualifiedTypeName name="lombok.Getter"/>
<fullyQualifiedTypeName name="lombok.AllArgsConstructor"/>
<fullyQualifiedTypeName name="com.example.demo.exceptions.ValidacionException"/>
<fullyQualifiedTypeName name="org.hibernate.type.TrueFalseType"/>
<fullyQualifiedTypeName name="com.example.demo.service.PersonaService"/>
<fullyQualifiedTypeName name="org.springframework.web.bind.annotation.PathVariable"/>
<fullyQualifiedTypeName name="com.example.demo.repository.PersonaRepository"/>
<fullyQualifiedTypeName name="com.example.demo.exceptions.ResourceNotFoundException"/>
<fullyQualifiedTypeName name="java.lang.Override"/>
<fullyQualifiedTypeName name="javax.transaction.Transactional"/>
<fullyQualifiedTypeName name="org.springframework.web.bind.annotation.PutMapping"/>
<fullyQualifiedTypeName name="org.springframework.web.bind.annotation.RequestBody"/>
<fullyQualifiedTypeName name="com.example.demo.service.CompaniaService"/>
<fullyQualifiedTypeName name="com.example.demo.dto.CompaniaReducidaDTO"/>
<fullyQualifiedTypeName name="org.springframework.cloud.netflix.eureka.server.EnableEurekaServer"/>
</qualifiedTypeNameHistroy>
